name: space control panel - UI

on:
  push:
    branches: [ main ]

  pull_request:
    branches: [ main ]

  workflow_dispatch:

env:
  ARTIFACT_NAME: 'ui artifact'
  ARTIFACT_RETENTION_DAYS: 30
  ARTIFACT_TARGET_FILEPATH: 'dist/'

  DEFAULT_API_URL_PLACEHOLDER_FILEPATH: ./dist/index.html
  DEFAULT_API_URL_PLACEHOLDER: '%%API_URL_PLACEHOLDER%%'

  NODE_VERSION: '14.18.2'

  API_URL_PRODUCTION: https://api.ufostart.com
  APP_URL_PRODUCTION: https://space-control-center.ufostart.com
  TAG_NAME_PRODUCTION: production

  API_URL_STAGING: https://staging.api.ufostart.com
  APP_URL_STAGING: https://staging.space-control-center.ufostart.com
  TAG_NAME_STAGING: staging

jobs:
  build_and_test:
    name: Build and test UI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Prepare environment values
        id: environment_values
        uses: ./.github/actions/define-environment-values
        with:
          api-url: ${{ env.API_URL_STAGING }}
          app-url: ${{ env.APP_URL_STAGING }}

      - name: Define node version
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: debug variables
        run: |
          echo "event_name:     '${{github.event_name}}"
          echo "api url:        '${{ steps.environment_values.outputs.api_url }}'"
          echo "app url:        '${{ steps.environment_values.outputs.app_url }}'"
          echo "GITHUB_RUN_ID:  '$GITHUB_RUN_ID'"
          echo "GITHUB_SHA:     '$GITHUB_SHA'"

      # step one
      - name: Build, Test
        run: |
          echo "build & test for : apiUrl='${{ steps.environment_values.outputs.api_url }}'"
          
          echo 'yarn install'
          echo 'yarn code:style'
          echo 'yarn code:analyse'
          echo 'yarn build'
          echo 'yarn test'
          
          ./shell_script.sh
          if [[ ! -d '${{ env.ARTIFACT_TARGET_FILEPATH }}' ]]; then
            mkdir -p '${{ env.ARTIFACT_TARGET_FILEPATH }}'
          fi
          echo "apiUrl: '${{ steps.environment_values.outputs.api_url }}'" > dist/artifact.txt
        env:
          SHELL_SCRIPT_RESULT_OK: ${{ secrets.SHELL_SCRIPT_RESULT_OK }}

      - name: Publish UI build artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_TARGET_FILEPATH }}
          retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}

  deploy_to_staging:
    name: Deploy UI to staging
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    needs: [build_and_test]
    environment:
      name: staging
      url: ${{ steps.environment_values.outputs.app_url }}
    steps:
      - uses: actions/checkout@v2

      - name: Prepare environment values
        id: environment_values
        uses: ./.github/actions/define-environment-values
        with:
          api-url: ${{ env.API_URL_STAGING }}
          app-url: ${{ env.APP_URL_STAGING }}

      - name: Fetch UI build artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_TARGET_FILEPATH }}

      - name: Define api url
        uses: ./.github/actions/replace-string-in-file
        with:
          filepath: ${{ env.DEFAULT_API_URL_PLACEHOLDER_FILEPATH }}
          search: ${{ env.DEFAULT_API_URL_PLACEHOLDER }}
          replacement: ${{ steps.environment_values.outputs.api_url }}

      - name: Deploy artifact
        run: |
          cat '${{ env.ARTIFACT_TARGET_FILEPATH }}/artifact.txt'

      - name: Tag artifact
        uses: ./.github/actions/add-environment-datetime-tag
        if: always()
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          environment-name: ${{ env.TAG_NAME_STAGING }}
          datetime: ${{ steps.environment_values.outputs.current-datetime }}

  deploy_to_production:
    name: Deploy UI to production
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    needs: [build_and_test,deploy_to_staging]
    environment:
      name: production
      url: ${{ steps.environment_values.outputs.app_url }}
    steps:
      - uses: actions/checkout@v2

      - name: Prepare environment values
        id: environment_values
        uses: ./.github/actions/define-environment-values
        with:
          api-url: ${{ env.API_URL_PRODUCTION }}
          app-url: ${{ env.APP_URL_PRODUCTION }}

      - name: Fetch UI build artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_TARGET_FILEPATH }}

      - name: Define api url
        uses: ./.github/actions/replace-string-in-file
        with:
          filepath: ${{ env.DEFAULT_API_URL_PLACEHOLDER_FILEPATH }}
          search: ${{ env.DEFAULT_API_URL_PLACEHOLDER }}
          replacement: ${{ steps.environment_values.outputs.api_url }}

      - name: Deploy artifact
        run: |
          cat '${{ env.ARTIFACT_TARGET_FILEPATH }}/artifact.txt'

      - name: Tag artifact
        uses: ./.github/actions/add-environment-datetime-tag
        if: always()
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          environment-name: ${{ env.TAG_NAME_PRODUCTION }}
          datetime: ${{ steps.environment_values.outputs.current-datetime }}
